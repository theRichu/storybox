<?php

/**
 * This is the model base class for the table "tbl_place".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Place".
 *
 * Columns in table "tbl_place" available as properties of the model,
 * followed by relations of table "tbl_place" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $address
 * @property string $description
 * @property string $create_time
 * @property integer $create_user_id
 * @property string $update_time
 * @property integer $update_user_id
 * @property double $map_lat
 * @property double $map_lag
 *
 * @property Room[] $rooms
 * @property User[] $tblUsers
 */
abstract class BasePlace extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_place';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Place|Places', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, address, description', 'required'),
			array('name, address', 'length', 'max'=>255),
			array('create_time, create_user_id, update_time, update_user_id, map_lat, map_lag', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, address, description, create_time, create_user_id, update_time, update_user_id, map_lat, map_lag', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'rooms' => array(self::HAS_MANY, 'Room', 'place_id'),
			'tblUsers' => array(self::MANY_MANY, 'User', 'tbl_user_has_place(place_id, user_id)'),
		  'updater' => array(self::BELONGS_TO, 'User', 'update_user_id'),
		  'creater' => array(self::BELONGS_TO, 'User', 'create_user_id'),
		  
		);
	}

	public function pivotModels() {
		return array(
			'tblUsers' => 'UserHasPlace',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'address' => Yii::t('app', 'Address'),
			'description' => Yii::t('app', 'Description'),
			'create_time' => Yii::t('app', 'Create Time'),
			'create_user_id' => Yii::t('app', 'Create User'),
			'update_time' => Yii::t('app', 'Update Time'),
			'update_user_id' => Yii::t('app', 'Update User'),
			'map_lat' => Yii::t('app', 'Map Lat'),
			'map_lag' => Yii::t('app', 'Map Lag'),
			'rooms' => null,
			'tblUsers' => null,
		);
	}

	/**
	 * Prepares create_user_id and update_user_id attributes before
	 saving.
	 */
	protected function beforeSave()
	{
	  if(null !== Yii::app()->user)
	    $id=Yii::app()->user->id;
	  else
	    $id=1;
	  if($this->isNewRecord)
	    $this->create_user_id=$id;
	  $this->update_user_id=$id;
	  return parent::beforeSave();
	}
	
	
	public function behaviors()
	{
	  return array(
	    'CTimestampBehavior' => array(
	      'class' => 'zii.behaviors.CTimestampBehavior',
	      'createAttribute' => 'create_time',
	      'updateAttribute' => 'update_time',
	      'setUpdateOnCreate' => true,
	    ),
	  );
	}
	
	
	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('create_time', $this->create_time, true);
		$criteria->compare('create_user_id', $this->create_user_id);
		$criteria->compare('update_time', $this->update_time, true);
		$criteria->compare('update_user_id', $this->update_user_id);
		$criteria->compare('map_lat', $this->map_lat);
		$criteria->compare('map_lag', $this->map_lag);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}