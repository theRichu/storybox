<?php

/**
 * This is the model base class for the table "tbl_room".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Room".
 *
 * Columns in table "tbl_room" available as properties of the model,
 * followed by relations of table "tbl_room" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $person
 * @property integer $place_id
 * @property integer $area
 * @property integer $areatype
 * @property string $contactnumber
 * @property string $workstart
 * @property string $workto
 *
 * @property Place $place
 * @property RoomCharge[] $roomCharges
 * @property RoomOption[] $roomOptions
 */
abstract class BaseRoom extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_room';
	}

	public static function label($n = 1) {
		return Yii::t('app', '강의실|강의실들', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('name, person, place_id', 'required'),
			array('person, place_id, area, areatype', 'numerical', 'integerOnly'=>true),
			array('name, contactnumber', 'length', 'max'=>255),
			array('workstart, workto', 'safe'),
			array('area, areatype, contactnumber, workstart, workto', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, person, place_id, area, areatype, contactnumber, workstart, workto', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'place' => array(self::BELONGS_TO, 'Place', 'place_id'),
			'roomCharges' => array(self::HAS_MANY, 'RoomCharge', 'room_id'),
			'roomOptions' => array(self::HAS_MANY, 'RoomOption', 'room_id'),
		  'roomImages' => array(self::HAS_MANY, 'RoomImage', 'room_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', '이름'),
			'person' => Yii::t('app', '인원수'),
			'place_id' => null,
			'area' => Yii::t('app', '면적'),
			'areatype' => Yii::t('app', '단위'),
			'contactnumber' => Yii::t('app', '연락처'),
			'workstart' => Yii::t('app', '업무 시작'),
			'workto' => Yii::t('app', '업무 종료'),
			'place' => null,
			'roomCharges' => null,
			'roomOptions' => null,
		);
	}
	
	/**
	 * Prepares create_user_id and update_user_id attributes before
	 saving.
	 */
	protected function beforeSave()
	{
	  if(null !== Yii::app()->user)
	    $id=Yii::app()->user->id;
	  else
	    $id=1;
	  if($this->isNewRecord)
	    $this->create_user_id=$id;
	    $this->update_user_id=$id;
	  return parent::beforeSave();
	}
	

	public function behaviors()
	{
	  return array(
	    'CTimestampBehavior' => array(
	      'class' => 'zii.behaviors.CTimestampBehavior',
	      'createAttribute' => 'create_time',
	      'updateAttribute' => 'update_time',
	      'setUpdateOnCreate' => true,
	    ),
	    'ESaveRelatedBehavior' => array(
	      'class' => 'application.components.ESaveRelatedBehavior'
	    ),
	  );
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('person', $this->person);
		$criteria->compare('place_id', $this->place_id);
		$criteria->compare('area', $this->area);
		$criteria->compare('areatype', $this->areatype);
		$criteria->compare('contactnumber', $this->contactnumber, true);
		$criteria->compare('workstart', $this->workstart, true);
		$criteria->compare('workto', $this->workto, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}